/** @type {import('jest').Config} */
module.exports = {
  moduleFileExtensions: ['js', 'ts', 'json'],
  rootDir: 'src',
  transform: { '^.+\\.ts$': 'ts-jest' },
  collectCoverageFrom: ['**/*.ts'],
  coverageDirectory: '../coverage',
  testEnvironment: 'node',
  testMatch: ['<rootDir>/**/*.spec.ts'],
  coveragePathIgnorePatterns: [
    '<rootDir>/index.ts',
    '<rootDir>/token.ts',
    '<rootDir>/fastfood-libs.module.ts',
    '<rootDir>/fastfood-libs-options.interface.ts',
    '<rootDir>/application/index.ts',
    '<rootDir>/domain/index.ts',
    '<rootDir>/infrastructure/index.ts',
    '<rootDir>/domain/exception',
    '<rootDir>/infrastructure/config/app.config.ts',
    '<rootDir>/infrastructure/config/database.config.ts',
    '<rootDir>/infrastructure/decorator/class-transformer-helpers.decorator.ts',
    '<rootDir>/infrastructure/decorator/swagger-property.decorator.ts',
    '<rootDir>/infrastructure/decorator/swagger-response.decorator.ts',
    '<rootDir>/infrastructure/entity/base.entity.ts',
    '<rootDir>/infrastructure/helper/response.helper.ts',
    '<rootDir>/infrastructure/pipe/transformation.pipe.ts',
    '<rootDir>/infrastructure/pipe/validation.pipe.ts',
    '<rootDir>/testing',
  ],
  coverageThreshold: {
    global: {
      branches: 80,
      functions: 80,
      lines: 80,
      statements: 80,
    },
  },
};
